# Do not modify this file!	It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.	Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
	imports =
		[ (modulesPath + "/installer/scan/not-detected.nix")
		];

	networking.hostName = "fanny";

	boot = {
        initrd.availableKernelModules = [ "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
        initrd.kernelModules = [ "dm-snapshot" ];
		#kernelPackages = pkgs.linuxPackages_latest;
        kernelModules = [ "kvm-amd" ];
        extraModulePackages = [ ];
    };

	fileSystems = {
		"/" = { device = "/dev/disk/by-uuid/08fbab7d-b33a-4d09-9e48-eb5aada631bb";
			fsType = "btrfs";
			options = [ "compress=zstd,ssd,noatime,space_cache=v2,subvol=root" ];
		};
		"/var" = { device = "/dev/disk/by-uuid/08fbab7d-b33a-4d09-9e48-eb5aada631bb";
				fsType = "btrfs";
				options = [ "compress=zstd,ssd,noatime,space_cache=v2,subvol=var" ];
			};
		"/nix" = { device = "/dev/disk/by-uuid/08fbab7d-b33a-4d09-9e48-eb5aada631bb";
				fsType = "btrfs";
				options = [ "compress=zstd,ssd,noatime,space_cache=v2,subvol=nix" ];
			};
		"/mnt/media" = { device = "/dev/disk/by-uuid/08fbab7d-b33a-4d09-9e48-eb5aada631bb";
				fsType = "btrfs";
				options = [ "compress=zstd,ssd,noatime,space_cache=v2,subvol=media" ];
			};
		"/mnt/btrfs" = { device = "/dev/disk/by-uuid/08fbab7d-b33a-4d09-9e48-eb5aada631bb";
				fsType = "btrfs";
				options = [ "compress=zstd,ssd,noatime,space_cache=v2" ];
			};
		"/home" = { device = "/dev/main/home";
				fsType = "ext4";
				options = [ "noatime" ];
			};
		"/boot" = { device = "/dev/disk/by-uuid/7094-2597";
				fsType = "vfat";
			};
		# NFS automount
		"/nfs/nas" = { device = "nas.zoya.szilu.symbion:/data";
				fsType = "nfs";
				options = [ "x-systemd.automount" "x-systemd.idle-timeout=300" "noauto" ];
			};
	};

	swapDevices = [{ device = "/var/lib/swap"; size = 16 * 1024; }];


	# Enables DHCP on each ethernet and wireless interface. In case of scripted networking
	# (the default) this is the recommended approach. When using systemd-networkd it's
	# still possible to use this option, but it's recommended to use it in conjunction
	# with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
	networking.useDHCP = lib.mkDefault true;
	# networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
	# networking.interfaces.wlp5s0.useDHCP = lib.mkDefault true;

	nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
	hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

	hardware = {
		bluetooth = {
			enable = true;
			powerOnBoot = true;
		};
		nvidia = {
			package = config.boot.kernelPackages.nvidiaPackages.stable;
			open = true;
			#open = false;
			modesetting.enable = true;
			powerManagement.enable = true;
			#powerManagement.finegrained = true;
			nvidiaSettings = true;
		};
		nvidia-container-toolkit.enable = true;
		graphics = {
			enable = true;
			enable32Bit = true;
		};
		#opengl = {
		#	enable = true;
		#	driSupport32Bit = true;
		#};
	};
	environment.sessionVariables = {
		WLR_NO_HARDWARE_CURSORS = "1";
	};

	services.xserver.videoDrivers = ["nvidia"];
}

# vim: ts=4
